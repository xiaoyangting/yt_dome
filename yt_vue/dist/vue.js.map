{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vnode/index.JS","../src/initLifeCycle.js","../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 解析字符串 的正则\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\n\n// 生成 ast 树\nexport function parseHTML(html) { // HTML 最开始肯定是一个 <div id=\"app\">内容</div>\n  const ELEMENT_TYPE = 1; // dom 元素类型\n  const TEXT_TYPE = 3; // text 文本类型\n  const stack = [] // 用于存储元素的\n  let currentParent = null // 指向栈中的最后一个( 当前元素 )\n  let root = null // ast树\n\n  function createASTElement(tag, attrs) {\n    return {\n      tag, // 标签名称\n      type: ELEMENT_TYPE, // 当前的类型\n      children: [], // 子元素的数组\n      attrs, // 该标签的属性数组\n      parent: null, // 当前元素的父级元素\n    }\n  }\n\n  // 开始标签\n  // 利用栈型结构 构造出一课 ast 树\n  function start(tagName, attrs) {\n    let node = createASTElement(tagName, attrs)\n    if (!root) { // 判断是否是空树\n      root = node // 如果为空则说明当前的元素是树的根节点\n    }\n\n    if (currentParent) { // 判断栈中最后的元素是否存在\n      node.parent = currentParent // 当前元素中的父级元素就是 栈中的最后一个元素 ( 因为当前的元素还没进栈 )\n      currentParent.children.push(node) // 还需要把栈中最后一个元素的 子元素数组记录 当前元素\n    }\n\n    // 把栈中的最后一个元素记录完成之后, 我们就可以开始把当前元素追加到栈中 成为栈中最后的元素了\n    stack.push(node)\n    currentParent = node // currentParent 栈中的最后一个元素\n  }\n  // 文本内容\n  function chars(text) { // 文本直接放到当前指向的节点终\n    text = text.replace(/\\s/g, ' ') // 如果当前文本空格超过2个以上就替换成一个\n    // 把当前内容追加到 栈中的最后一个的子元素数组中 ( children ), 类型为 3\n    text && currentParent.children.push({\n      type: TEXT_TYPE,\n      text,\n      parent: currentParent\n    })\n  }\n\n  function end(tag) {\n    let node = stack.pop() // 如果走到end这个标签, 则说明已经遇到闭标签, 这个时候就可以把栈中最后一个弹出来了, 并且校验标签是否合法\n    if (node.tag == tag) {\n      currentParent = stack[stack.length - 1]\n    } else {\n      throw new Error('当前标签闭合有误')\n    }\n\n  }\n\n  // 前进字符串 ( 去除已解析的字符串 )\n  function advance(n) {\n    html = html.substring(n)\n  }\n\n  function parseStartTag() {\n    // 解析开始标签\n    const start = html.match(startTagOpen)\n    // 判断是否有开始标签\n    if (start) {\n      // 组合虚拟dom\n      const match = {\n        tagName: start[1], // 标签名\n        attrs: [], // 该标签的属性值等\n      }\n      // 前进字符\n      advance(start[0].length)\n\n      // 如果不是开始标签 就一直匹配下去 直至把 > 匹配到\n      let attr, end // attr当前属性变量  end 开始标签的 闭字符\n      while ( !(end = html.match(startTagClose)) && (attr = html.match(attribute)) ) {\n        advance(attr[0].length)\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5]\n        })\n      }\n\n      if (end) {\n        advance(end[0].length)\n      }\n      return match // 返回开始标签\n    }\n    return false // 不是开始标签\n  }\n  while (html) {\n    // 如果textEnd 为 0 说明是一个开始标签 或者 结束标签\n    // 如果textEnd > 0 说明就是文本的结束位置\n    let textEnd = html.indexOf('<')\n    if (textEnd == 0) {\n      const startTagMatch = parseStartTag() // 开始标签的匹配结果\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue\n      }\n      // 匹配结束标签\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n    }\n    if (textEnd > 0) {\n      let text = html.substring(0, textEnd) // 内容 {{ name }}</div>  拿到的值是这个 现在进行切割\n      if (text) {\n        chars(text)\n        advance(text.length)\n      }\n    }\n  }\n\n  return root\n}","import { parseHTML } from \"./parse\";\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\n// console.log(defaultTagRE.exec('{{name}} nihao ya '));\n\nfunction genProps(attrs) {\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    if (attr.name === 'style') {\n      let obj = {}\n      attr.value.split(';').forEach(item => {\n        let [key, value] = item.split(':')\n        obj[key] = value\n      });\n      attr.value = obj\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  // console.log(str.slice(0, -1));\n  return `{${str.slice(0, -1)}}` // 去除尾部的 , \n}\n\nfunction gen(node) {\n  if (node.type === 1) { // 如果是dom元素的话, 需要递归转换代码\n    return codegen(node)\n  } else if (node.type === 3) { // 文本\n    let text = node.text\n    if (!defaultTagRE.test(text)) { // 取反 获取纯文本( 就是没有该文本没有 {{ 这些 }} )\n      return `_v(${JSON.stringify(text)})`\n    } else {\n      let tokens = []\n      let match = null\n      defaultTagRE.lastIndex = 0\n      let lastIndex = 0\n      // 匹配 字符串中所有的 {{}}\n      while (match = defaultTagRE.exec(text)) {\n        // exec 里面有一个index 属性, 第一次匹配他会匹配到第一个符合条件的字符串, \n        // 第二次匹配的话, 他会跳过第一个符合条件的字符串, 以此类推, 可以把它的匹配当成一个前进字符\n        // console.log(match);\n        let index = match.index // 匹配到 {{}} 的位置\n        if (index > lastIndex) {\n          // 如果index 大于 lastIndex 的话, 就说明 {{变量}} 是在正常字符串的后面, \n          // 那么我们就需要把到 index 之前的字符串截取出来\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n        }\n        // 上面已经把 {{}} 之前的正常字符串截取出来了, 那么后面就可以把变量也追加进去了\n        tokens.push(`_s(${match[1].trim()})`)\n        // 把当前的字符串索引请进到 {{}} 之后, 提供下次再一次请进\n        lastIndex = index + match[0].length\n      }\n      // console.log(tokens);\n      return `_v(${tokens.join('+')})`\n    }\n\n  }\n}\n\nfunction genChildren(children) {\n  return children.map(child => gen(child)).join(',')\n}\n// 生成代码\nfunction codegen(ast) {\n  let children = genChildren(ast.children)\n  // 递归 每一层都转义成方法结构\n  let code = (`_c('${ast.tag}', ${ast.attrs.length > 0 ? genProps(ast.attrs) : null} ${ast.children.length ? `,${children}` : ''})`)\n  return code\n}\n\nexport function compileToFunction(template) {\n  // 1. 将 template 转化成 ast 语法树\n  let ast = parseHTML(template)\n  // console.log(ast)\n\n  // 2. 生成 render 方法 ( render方法执行后的返回的结果就是 虚拟dom )\n  // 模板引擎的实现原理 就是 with ( 将当前的this 指向更改 ) + new Function ( 字符串转代码返回 )\n  let code = codegen(ast)\n  code = `with(this){ return ${code} }`\n  let render = new Function(code) // 根据代码字符串 利用 Function 来生成代码\n  // console.log(code);\n  return render\n}","let id = 0\nclass Dep {\n  constructor() {\n    this.id = id++\n    this.subs = [] // 这里存储着当前属性对应的watcher, (因为可能一个属性对应多个组价, 所以watcher 也会是多个)\n  }\n\n  // 交叉记录\n  depend() { // 调用watcher 记录dep\n    // 这里我们不希望放重复的watcher, 在addDep 这个方法里面, 已经加了一层拦截, 所以不会有重复的 dep watcher\n    Dep.target.addDep(this)\n    // dep 和 watcher 是一个多对多得关系 ( 一个属性可以再多个组件中使用 dep -> 多个watch  )\n    // 一个组件中由多个属性组成 (  一个watcher 对应多个 dep )\n  }\n  // 在watcher.addDep 里面会有一个回调, 调用dep 里面的 addsub\n  addSub(watch) {\n    this.subs.push(watch)\n  }\n\n  // 调用dep 里面的watcher 来循环更新\n  notify() {\n    this.subs.forEach(watcher => watcher.update(watcher))\n  }\n\n}\n\n// 该属性是 Dep 的原型链上的属性, 全局唯一性, 为的就是在Dep里面存储 watcher, 然后再利用 watcher 方法存储 Dep\nDep.target = null\n\nexport default Dep\n","/**\n * dep是每个属性都会有一个, \n * watcher 是没个组件都会有一个, 所以就会是一个多对多形式, 因为该组价的属性, 也有可能用到别的组件\n * 1. 当我们创建渲染 watcher 的时候, 我们会把当前的渲染watcher 放到 Dep.target 上 ( 为了互相记录, 也就是watcher需要记录dep dep也需要记录watcher)\n * 2. 调用_render() 的时候, 里面的_s 会调用属性, 走到属性监听的 get 上\n * 每个属性都会有一个 dep ( 属性就是被观察者 ),  watcher 就是观察者 ( 属性变化了会通知观察者来个小 ) = 观察者模式\n */\n\nimport Dep from \"./dep\"\n\n// 不同组件有不同的 watcher\nlet id = 0\nclass Watcher {\n  constructor(vm, fn, options) {\n    this.renderWatcher = options // 目前没用到\n    this.getter = fn // getter 意味着调用 _update(vm._render) 这个函数, 可以获取变量, 产生取值(也就是get)操作\n    this.id = id++ // watcher 的唯一标识\n    this.dep = [] // 用来存储dep ( 后续作用的话 是实现计算属性, 和一些清理工作, 具体慢慢来 目前我也不知道 )\n    this.depId = new Set() // 用来去重dep的\n    this.get()\n  }\n  get() {\n    Dep.target = this\n    this.getter()\n    Dep.target = null \n  }\n  addDep(dep) {\n    const  id = dep.id \n    if (!this.depId.has(id)) { // Set 有一个 has( 判断是否有该属性 如果有返回 true, 没有则是 false)\n      this.depId.add(id)\n      this.dep.push(dep) // 记录 dep( 也就是属性 )\n      dep.addSub(this) // 通过传过来的 dep(实例对象) 调用里面的原型方法, 让当前dep 存储记录 当前 watcher\n    }\n  }\n\n  // 收集更新 ( vue里面的dom 更新是异步更新   )\n  update(watcher) { // 该 watcher 是从dep里面传来的, 而dep里面的 watcher 在之前记录属性的时候, 就已经做了交叉存储\n    queueWatch(watcher)\n  }\n\n  // 更新\n  run() {\n    this.get()\n  }\n}\n\nlet queue = [] // 监听队列\nlet has = {} // 做列表维护, 判断存放了哪些watcher,  去重, 为的是同个 watch 下, 不多次更新DOM, 只待留一次 进行一次性更新\nlet pending = false // 防抖\n\nfunction flushSchedulerQueue() {\n  let flushQueue = queue.slice(0) // 获取存储的所有 watcher 队列\n  queue = []\n  has = {}\n  pending = false\n  // 循环 watcher 队列, 执行每个 watcher 里面的更新操作(run) 也就是更新\n  flushQueue.forEach(w => w.run())\n}\n\n// 记录watcher 进行批处理\nfunction queueWatch(watcher) {\n  // 首先拿到id 处理节流阀\n  const id = watcher.id\n  // 在has 里面没有该watch 的情况下 才进行存储 watch\n  if (!has[id]) {\n    queue.push(watcher) // 追加当前watcher 下, 利用宏任务微任务的特性, 在代码执行完成之后再更新( 也就是等data 里面的属性全部更改完成之后 再统一更新, 而不是更改一个属性 就更新一次dom )\n    has[id] = true\n    // 不管我们的update 执行多少次, 但最终只执行一轮更新dom 操作\n    if (!pending) {\n      nextTick(flushSchedulerQueue)\n    }\n  }\n}\n\n// 这个批处理, 是为了不让用户 为了拿到 vue 更改之后的dom元素 而不乱开定时器, 进行的批处理\nlet callbacks = [] // 异步更新队列, 用户如果调用的话, 谁先调用 谁的快\nlet waiting = false // nextTickk 的节流阀\nfunction flushCallbacks () {\n  callbacks.forEach(cb => cb())\n}\nexport function nextTick(cb) {\n  callbacks.push(cb)\n  if (!waiting) {\n    Promise.resolve().then(flushCallbacks)\n    waiting = true\n  }\n}\n\nexport default Watcher","export function createElementVNode(vm, tag, data, ...children) {\n  if (data == null) {\n    data = {}\n  }\n  let key = data.key\n  if (key) {\n    delete data.Key\n  }\n  return vnode(vm, tag, key, data, children)\n}\n\n// _v() 使用到\nexport function createTextVNode(vm, text) {\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\n// 这个 vnode 和 ast 一样吗?  ast做的是语法层面的转换, 它描述的是语法本身( 可以描述js css  html )\n// 我们的虚拟dom 是描述dom元素, 可以增加一些自定义属性 ( 描述 dom )\nfunction vnode(vm, tag, key, data, children, text) {\n  return {\n    vm,\n    tag,\n    key,\n    data,\n    children,\n    text\n  }\n}","import Watcher from \"./observe/watcher\";\nimport { createElementVNode } from \"./vnode/index.JS\";\nimport { createTextVNode } from \"./vnode/index.JS\";\n\nfunction createElm(vnode) {\n  // console.log(vnode);\n  let { tag, data, children, text } = vnode\n  // 判断 tag(标签名) 是否是字符串, 如果是代表着是dom元素, 如果不是 就是文本内容\n  if (typeof tag === 'string') {\n    // 这里将正式节点喝虚拟节点对于起来, 后续可以用到\n    vnode.el = document.createElement(tag)\n    // 循环当前children 来递归创建 dom\n    children.forEach(child => {\n      // 递归拿到创建的元素 或者 文本内容然后追加到父元素 然后一层一层进 一层一层出\n      vnode.el.appendChild(createElm(child))\n    });\n  } else {\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\n\n// oldVNode 是老vnode   vnode 是新vnode\nfunction patch(oldVNode, vnode) {\n  // console.log(oldVNode);\n  // 初始化\n  const isRealElement = oldVNode.nodeType\n  console.log(isRealElement);\n  if (isRealElement) {\n    const elm = oldVNode // 获取真实dom\n    const parenElm = elm.parentNode // 拿到父元素\n    let newElm = createElm(vnode) // 创建真实dom\n    parenElm.insertBefore(newElm, elm.nextSibling) // 将当前新的元素插入到 真实元素的下一个元素的前面\n    parenElm.removeChild(elm)\n    return newElm\n  }\n}\n\nexport function initLifeCycle(Vue) {\n  Vue.prototype._update = function (vnode) { // 将 vnode 转换成真是dom\n    const vm = this\n    const el = vm.$el;\n\n    // patch 既有初始化真实dom功能, 也有更新功能\n    vm.$el = patch(el, vnode)\n  }\n\n  // 该方法是创建 描述 dom 元素的对象\n  Vue.prototype._c = function () {\n    // console.log(...arguments);\n    return createElementVNode(this, ...arguments)\n  }\n\n  // 该方法是把 字符串 和 变量拼接\n  Vue.prototype._v = function () {\n    // console.log(...arguments);\n    return createTextVNode(this, ...arguments)\n  }\n\n  // 该方法是获取 变量 转为字符串\n  Vue.prototype._s = function (value) {\n    if (typeof value !== 'object') return value\n    // console.log(value);\n    return JSON.stringify(value)\n  }\n\n  Vue.prototype._render = function () {\n    // 当渲染的时候会去实例中取值, 我们就可以将属性喝视图绑定在一起( with 传入的this, 所以我们现在吧render的this指向 指向vue 就没人绑定 )\n    // console.log( this.$options.render.call(this));\n    return this.$options.render.call(this) // render 是ast树 转义后生成的方法\n  }\n}\n\nexport function mountComponent(vm, el) {\n  vm.$el = el\n\n  // 调用初始化  render 会返回描述dom的代码树型结构, _update 拿到描述dom的结构之后进行喜欢遍历生成真实dom\n  const updateComponent = () => {\n    // console.log(vm._render());\n    vm._update(vm._render())\n  }\n  const watcher = new Watcher(vm, updateComponent, true)\n  // updateComponent()\n}\n","export function isObject(val) {\n  return typeof val === 'object' && val  !== null\n}","// 我们需要重写数组的某些方法( 如 push 改变原数组的方法 )\nlet oldArrayProto = Array.prototype // 获取原数组类型\nexport const newArrayProto = Object.create(oldArrayProto) // 创建新的数组原型\n\nlet methods = [ // 找到所有的变异方法\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n] // concat slice 都不会改变原数组\n\nmethods.forEach((method) => {\n  // 重写所有的数组变异方法 ( 劫持 或者 装饰器 )\n  newArrayProto[method] = function (...args) {\n    console.log('劫持', this);\n    // 我需要调用数组的原有方法\n    const res = oldArrayProto[method].call(this, ...args);\n\n    var inserted  = null\n    // 判断改变数组的值 是否是对象, 如果是对象的情况下, 需要再一次进行对象观测监听\n    switch (method) {\n      case 'push':\n      case 'unshift': // arr.unshift(1,2,3)\n        inserted = args\n        break;\n      case 'splice':  // arr.splice(0,1,{a:1},{a:1})\n        inserted = args.slice(2)\n        break\n    }\n\n    if (inserted) {\n      // 对新增内容再次观测监听, 不需要判断, 在observe 会有判断的\n      this.__ob__.observeArray(inserted)\n    }\n\n    return res\n  }\n})","import { isObject } from \"../utils\";\nimport { newArrayProto } from \"./array\";\nimport Dep from \"./dep\";\nclass Observer {\n  constructor(data) {\n    // 把当前对类 挂载到当前数据的原型链上\n    // data.__ob__ = this // 如果直接链上赋值, 会导致死循环\n    // 所以我们需要把该属性该为 不可遍历\n    Object.defineProperty(data, '__ob__', { // 如果不设置不可枚举的话, 进入死循环 死循环的条件是 一直在循环这个 __ob__\n      value: this,\n      enumerable: false, // 不可枚举 ( 不可循环 )\n    })\n\n    // 判断如果是数组的话 就劫持改变该数组的方法\n    if (Array.isArray(data)) {\n      data.__proto__ = newArrayProto\n      // 观测数组\n      // this.observeArray(data)\n    } else {\n      // 开始循环对象属性 劫持对象\n      this.walk(data)\n    }\n  }\n  walk(data) {\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\n  }\n  // 在数组里面如果是对象的话, 是需要进行再次监听的\n  observeArray(data) {\n    // 循环数组 进行观测监听\n    data.forEach(item => {\n      observe(item)\n    })\n  }\n}\n\nexport function defineReactive(data, key, value) {\n  // 再一次判断 观测监听\n  observe(value)\n  // 每个属性的 dep\n  var dep = new Dep()\n  Object.defineProperty(data, key, {\n    get () { // 取值的时候 会执行get\n      console.log('get', key);\n      console.log(Dep.target);\n      // 如果target 有的情况下, 那么就说明 watcher\n      if (Dep.target) {\n        dep.depend()\n      }\n      return value\n    },\n    set(newV) { // 赋值时 执行\n      console.log('set', key);\n      if (newV === value) return\n      observe(newV)\n      value = newV\n      dep.notify()\n    }\n  })\n}\n// 对data 继续观测\nexport function observe(data) {\n  // 判断是否有__ob__ 如果有的情况下, 那么久意味着该数据是被观测过的, 就不需要再观测\n  if (data.__ob__ instanceof Observer) {\n    return\n  }\n  // 对这个对象进行劫持\n  if (!isObject(data)) {\n    return\n  }\n  return new Observer(data)\n}","import { observe } from \"./observe/index\"\n\nexport function initState(vm) {\n  const opts = vm.$options // 回去Vue 所有的选项\n  if (opts.data) { // 判断是否有data, 如果有的再去初始化 代理 和 监听data里面的数据\n    initData(vm)\n  }\n}\n\nfunction proxy(vm, _data, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[_data][key]\n    },\n    set(newV) {\n      vm[_data][key] = newV\n    }\n  })\n}\n\nfunction initData(vm) {\n  var data = vm.$options.data // data 可能也有可能是函数\n  // 判断是否是函数, 如果是的话 就调用(默认会返回对象的), 再把该函数的this 指向 vm(也就是vue)\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\n\n  // 对数据继续劫持 vue 里采用的是 object definePropety api 来对对象里面的每一个属性进行代理的 而不是对整个对象\n  observe(data)\n\n  // 数据代理( 使之可以直接使用 this 的实例访问 )\n  for (const key in data) {\n    if (Object.hasOwnProperty.call(data, key)) {\n      proxy(vm, '_data', key)\n    }\n  }\n}","import { compileToFunction } from \"./compiler/index\";\nimport { mountComponent } from \"./initLifeCycle\";\nimport { initState } from \"./state\";\n\nexport function initMxin(vue) {\n  vue.prototype._init = function (options) { // 就是给Vue 增加 _init 方法的\n    const vm = this\n    vm.$options = options\n\n    // 1. 初始化状态\n    //     a. 数据监听\n    initState(vm)\n\n    // 2. 生成虚拟dom\n    if (options.el) {\n      vm.$mount(options.el)\n    }\n  }\n  \n  vue.prototype.$mount = function (el) {\n    const vm = this\n    // 获取dom元素\n    el = document.querySelector(el)\n    let opt = vm.$options\n    // 1 先判断有没有render函数\n    if (!opt.render) {\n      // 2 如果没有render函数的情况下, 再进行判断是否有template, 如果也没有的情况下 就 使用外部template \n      let template\n      if (!opt.template && el) {\n        template = el.outerHTML\n      } else {\n        if (el) {\n          template = opt.template // 如果有el 则采用模板内容\n        }\n      }\n      if (template && el) {\n        // 对模板进行编译\n        const render = compileToFunction(template)\n        // console.log(render);\n        opt.render = render // jsx 最终会编译成 h('xxx')\n      }\n      // console.log(opt);\n\n      mountComponent(vm, el)\n    }\n  }\n}","import { initMxin } from \"./init\";\nimport { initLifeCycle } from \"./initLifeCycle\";\nimport { nextTick } from \"./observe/watcher\";\n\nexport default function Vue(options) { // options 是用户配置\n  this._init(options) // 默认调用初始化函数\n}\nVue.prototype.$nextTick = nextTick\ninitMxin(Vue)\ninitLifeCycle(Vue)"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","tagName","node","push","chars","text","replace","end","pop","length","Error","advance","n","substring","parseStartTag","match","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","id","Dep","subs","target","addDep","watch","watcher","update","Watcher","vm","fn","options","renderWatcher","getter","dep","depId","Set","get","has","add","addSub","queueWatch","queue","pending","flushSchedulerQueue","flushQueue","w","run","nextTick","callbacks","waiting","flushCallbacks","cb","Promise","resolve","then","createElm","vnode","data","el","document","createElement","appendChild","createTextNode","patch","oldVNode","isRealElement","nodeType","console","log","elm","parenElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","createElementVNode","arguments","_v","createTextVNode","_s","_render","$options","call","mountComponent","updateComponent","isObject","val","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","res","inserted","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","depend","set","newV","notify","initState","opts","initData","proxy","_data","hasOwnProperty","initMxin","vue","_init","$mount","querySelector","opt","outerHTML","$nextTick"],"mappings":"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"}